{
    "pipes": [],
    "interfaces": [
        {
            "name": "IColorModel",
            "id": "interface-IColorModel-bb8f058c4a9113aacf516c5edbfea499ebbfd7783c072d917e8d3f2557db53c0850fea91668e2efcec4f9b635d1b67513b584f953bdf7dba5584bdc378442d1d",
            "file": "src/color/model/color.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IColorModel {\r\n    color: string;\r\n    isSelected: boolean;\r\n}\r\n\r\nexport class ColorModel implements IColorModel {\r\n    color: string;\r\n    isSelected: boolean;\r\n\r\n    constructor(color: string, isSelected: boolean) {\r\n        this.color = color;\r\n        this.isSelected = isSelected;\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "ColorModel",
            "id": "class-ColorModel-bb8f058c4a9113aacf516c5edbfea499ebbfd7783c072d917e8d3f2557db53c0850fea91668e2efcec4f9b635d1b67513b584f953bdf7dba5584bdc378442d1d",
            "file": "src/color/model/color.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface IColorModel {\r\n    color: string;\r\n    isSelected: boolean;\r\n}\r\n\r\nexport class ColorModel implements IColorModel {\r\n    color: string;\r\n    isSelected: boolean;\r\n\r\n    constructor(color: string, isSelected: boolean) {\r\n        this.color = color;\r\n        this.isSelected = isSelected;\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "color",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "isSelected",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "color",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "isSelected",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "isSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IColorModel"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b22cc618f62d949c350f65391e5806c0811be634616ee9817afb663bbddd3b5821e3885b7afcc54b17544e897b2616b00a6b219dbb2921d9957a217920bb82ee",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "[new ColorModel('#A4A5A7', true), new ColorModel('#00000', false)]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "'storybook'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ColorModel } from 'src/color/model/color.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'storybook';\r\n\r\n  colors = [new ColorModel('#A4A5A7', true), new ColorModel('#00000', false)];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    background-color: black;\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <div style=\"margin-left: 10em\">\r\n    <app-color-picker-dropdown label=\"Color\" [model]=\"colors\"></app-color-picker-dropdown>\r\n</div> -->\r\n<router-outlet></router-outlet>"
        },
        {
            "name": "CheckmarkComponent",
            "id": "component-CheckmarkComponent-5b24811f201d1ae120a125b5059d4dffb30dcf16e0b3c64e7522e1baafd1ea3e0423e968cebb8f0be176a29d22a5dbd9da56432ff40133bf99c6377e6aba2a2c",
            "file": "src/checkmark/checkmark.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkmark",
            "styleUrls": [
                "./checkmark.component.scss"
            ],
            "styles": [],
            "template": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"white\" class=\"checkmark\" viewBox=\"0 0 16 16\">\n  <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\n</svg>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkmark',\r\n  styleUrls: ['./checkmark.component.scss'],\r\n  standalone: true,\r\n  imports:[CommonModule],\r\n  template: `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"white\" class=\"checkmark\" viewBox=\"0 0 16 16\">\r\n      <path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\"/>\r\n    </svg>\r\n    `\r\n})\r\nexport class CheckmarkComponent { }\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".checkmark {\r\n    border-radius: 50%;\r\n    background-color: #3BAAD5;\r\n}",
                    "styleUrl": "./checkmark.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ColorButtonComponent",
            "id": "component-ColorButtonComponent-5dc7133dfdf39675a4625c546d50c9561ef85935fc5f01a9fe40db998084aaf42b784ad6038d03cccefc23e6051a5f34fcb525592c30c71b8bb30cdebc771658",
            "file": "src/color/color-button/color-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-color-button",
            "styleUrls": [
                "./color-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'#000'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBackground color of button\n",
                    "description": "<p>Background color of button</p>\n",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSelected State\n",
                    "description": "<p>Selected State</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "CheckmarkComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CheckmarkComponent } from 'src/checkmark/checkmark.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-color-button',\r\n  templateUrl: './color-button.component.html',\r\n  styleUrls: ['./color-button.component.scss'],\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [CommonModule, CheckmarkComponent]\r\n})\r\nexport class ColorButtonComponent {\r\n   /**\r\n   * Background color of button\r\n   */\r\n  @Input() color: string = '#000';\r\n     /**\r\n   * Selected State\r\n   */\r\n  @Input() isSelected: boolean = false;\r\n  @Output() selected = new EventEmitter<string>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"bootstrap/scss/functions\";\r\n@import \"bootstrap/scss/variables\";\r\n@import \"bootstrap/scss/mixins/breakpoints\";\r\n\r\n.color {\r\n  position: relative;\r\n\r\n  &__square {\r\n    position: relative;\r\n    width: 100%;\r\n    border-radius: 0.18rem;\r\n    border: solid white 1px;\r\n  }\r\n\r\n  &__square:after {\r\n    content: \"\";\r\n    display: block;\r\n    padding-bottom: 100%;\r\n  }\r\n\r\n  .content {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  &__checkmark {\r\n    position: absolute;\r\n    width: 45%;\r\n    height: 45%;\r\n    top: -7%;\r\n    right: -7%;\r\n    z-index: 1;\r\n    visibility: visible;\r\n    display: flex;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n}",
                    "styleUrl": "./color-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"color\">\r\n  <div\r\n    class=\"color__square\"\r\n    [ngStyle]=\"{ 'background-color': color }\"\r\n    (click)=\"selected.emit(color)\">  \r\n    <app-checkmark role=\"checkmark\" *ngIf=\"isSelected\" class=\"color__checkmark\"></app-checkmark>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ColorPickerDropdownComponent",
            "id": "component-ColorPickerDropdownComponent-999f02a70e52210dfd4bed2ce7eb283847f03cb07f050e8fc147c6f19483d680b1c9427213f2fcb7133e5f32e97e02c3edbc51b29b5e843c58181fd6c79a5d0d",
            "file": "src/color/color-picker/color-picker-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-color-picker-dropdown",
            "styleUrls": [
                "./color-picker-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-picker-dropdown.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "colors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "IColorModel[]",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<IColorModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "selectedColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IColorModel | undefined",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenChange",
                    "args": [
                        {
                            "name": "isOpened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "isOpened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "color",
                            "type": "IColorModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "IColorModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedColor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ColorsGridComponent",
                    "type": "component"
                },
                {
                    "name": "NgbDropdownModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { IColorModel } from '../model/color.model';\r\nimport { ColorsGridComponent } from '../colors-grid/colors-grid.component';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@Component({\r\n  selector: 'app-color-picker-dropdown',\r\n  templateUrl: './color-picker-dropdown.component.html',\r\n  styleUrls: ['./color-picker-dropdown.component.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ColorsGridComponent, \r\n    NgbDropdownModule,\r\n    MatIconModule\r\n  ],\r\n})\r\nexport class ColorPickerDropdownComponent implements OnInit, OnChanges {\r\n  @Input() colors!: IColorModel[];\r\n  @Input() label: string = '';\r\n  @Output() selected = new EventEmitter<IColorModel>();\r\n\r\n  protected selectedColor: IColorModel | undefined;\r\n  protected isOpened: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.setSelectedColor();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['colors']) {\r\n      this.setSelectedColor();\r\n    }\r\n  }\r\n\r\n  protected onOpenChange(isOpened: boolean) {\r\n    this.isOpened = isOpened;\r\n  }\r\n\r\n  protected select(color: IColorModel) {\r\n    this.selectedColor = color;\r\n    this.selected.emit(color);\r\n  }\r\n\r\n  private setSelectedColor() {\r\n    this.selectedColor = this.colors.find(c => c.isSelected);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".color-picker {\r\n  margin-left: 10rem;\r\n\r\n  &__title {\r\n    display: block;\r\n    color: white;\r\n    margin-bottom: 0.6rem;\r\n  }\r\n\r\n  &__btn-outline-primary {\r\n    box-shadow: none;\r\n    outline: none;\r\n  }\r\n\r\n  &__selected-square {\r\n    width: 1.68rem;\r\n    height: 1.68rem;\r\n    min-height: 1.55rem;\r\n    border-radius: 0.18rem;\r\n    border: solid white 1px;\r\n    font-size: 0.875rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  &__arrow {\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-weight:lighter;\r\n  }\r\n\r\n  &__dropdown-menu {\r\n    width: 18.2rem;\r\n    background-color: #303030;\r\n    padding: 0.25rem 0.5rem 0.5rem 0.5rem;\r\n    box-shadow: 0px 10px 14px 0px rgba(0, 0, 0, 0.25);\r\n    margin-top: 4px !important;\r\n    inset: 0px 0px auto auto !important;\r\n  }\r\n\r\n  &__dropdown-toggle {\r\n    height: 2.5rem;\r\n    width: 8.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: #2d2d2d;\r\n    border: 0;\r\n\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./color-picker-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<div\r\n  ngbDropdown\r\n  class=\"color-picker d-inline-block\"\r\n  (openChange)=\"onOpenChange($event)\"\r\n>\r\n  <label class=\"color-picker__title\">{{ label }}</label>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn color-picker__btn-outline-primary color-picker__dropdown-toggle\"\r\n    id=\"colorpalette\"\r\n    ngbDropdownToggle\r\n  >\r\n    <div class=\"color-picker__selected\">\r\n        <div class=\"color-picker__selected-square\"\r\n          [ngStyle]=\"{ 'background-color': selectedColor?.color }\"\r\n        ></div>      \r\n    </div>\r\n    <mat-icon class=\"color-picker__arrow\" *ngIf=\"isOpened\" fontIcon=\"expand_less\"></mat-icon>\r\n    <mat-icon class=\"color-picker__arrow\" *ngIf=\"!isOpened\" fontIcon=\"expand_more\"></mat-icon>\r\n  </button>\r\n  <div\r\n    ngbDropdownMenu\r\n    aria-labelledby=\"colorpalette\"\r\n    class=\"color-picker__dropdown-menu\"  >\r\n      <app-colors-grid\r\n        [colors]=\"colors\"\r\n        (selected)=\"select($event)\"\r\n      ></app-colors-grid>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ColorsGridComponent",
            "id": "component-ColorsGridComponent-fa8bc9851e3aaae748540e1321525e3c8f0ef08110d8e2f494cf14e33176d3345b67f53d2d200299963394806580b3ca1e01e2d0bea4b28f43125c80481f1aa8",
            "file": "src/color/colors-grid/colors-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors-grid",
            "styleUrls": [
                "./colors-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors-grid.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "colors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Array<IColorModel> | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<IColorModel>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "selectedColor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        122
                    ],
                    "jsdoctags": [
                        {
                            "name": "selectedColor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ColorButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IColorModel } from '../model/color.model';\r\nimport { ColorButtonComponent } from '../color-button/color-button.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-colors-grid',\r\n  templateUrl: './colors-grid.component.html',\r\n  styleUrls: ['./colors-grid.component.scss'],\r\n  standalone: true,\r\n  imports:[CommonModule, ColorButtonComponent]\r\n})\r\nexport class ColorsGridComponent {\r\n  @Input() colors: Array<IColorModel> | undefined;\r\n  @Output() selected = new EventEmitter<IColorModel>();\r\n\r\n  protected select(selectedColor: string): void {\r\n    const formerSelected = (this.colors?.find(c => c.isSelected));\r\n    if(formerSelected){\r\n      formerSelected.isSelected = false;\r\n    }\r\n    const newSelected = (this.colors?.find(c => c.color === selectedColor));\r\n    if(newSelected){\r\n      newSelected.isSelected = true;\r\n    }\r\n\r\n    this.selected.emit(newSelected);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"bootstrap/scss/functions\";\r\n@import \"bootstrap/scss/variables\";\r\n@import \"bootstrap/scss/mixins/breakpoints\";\r\n\r\n.colors-container {\r\n  &__galery {\r\n    gap: 0.5rem;\r\n    grid-template-columns: repeat(8, 1fr);\r\n  }\r\n}",
                    "styleUrl": "./colors-grid.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"colors-container\">\r\n  <div class=\"d-grid colors-container__galery\">\r\n    <div\r\n      *ngFor=\"let color of colors\"\r\n      class=\"col-auto px-0 colors-container__button\"\r\n    >\r\n      <app-color-button\r\n        [color]=\"color.color\"\r\n        [isSelected]=\"color.isSelected\"\r\n        (selected)=\"select($event)\"\r\n      ></app-color-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-20a21f723711f94c16c8ae11acd08aa24a96b7504e7b9a9ba82eca191afe6b53816648ab6bc1f84a27a1a7912605cad20f240cf87ecd6e0c2311752660924bd8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ColorPickerDropdownComponent } from 'src/color/color-picker/color-picker-dropdown.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    ColorPickerDropdownComponent  \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ColorPickerDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-4518c33195180c88b148f5ad346bbd509e37db201ff0191c9bd5d00989bc674a7e8476b2298b5f61b74b4fa3379b6d71a3615e2cc472074cf6e416b23941131b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Checkmark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkmark.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n}"
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n      new ColorModel('#FFE4C4', true), \r\n      new ColorModel('#FA9ACD', false),\r\n      new ColorModel('#DB7093', false),\r\n      new ColorModel('#FF00FF', false),\r\n      new ColorModel('#C71585', false),\r\n      new ColorModel('#800080', false),\r\n      new ColorModel('#4B1182', false),\r\n      new ColorModel('#CBE399', false),\r\n      new ColorModel('#9ACC9A', false),\r\n      new ColorModel('#95C533', false),\r\n      new ColorModel('#05CC33', false),\r\n\r\n    ]"
            },
            {
                "name": "colors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n      new ColorModel('#FFE4C4', false), \r\n      new ColorModel('#FA9ACD', false),\r\n      new ColorModel('#DB7093', false),\r\n      new ColorModel('#FF00FF', false),\r\n      new ColorModel('#C71585', false),\r\n      new ColorModel('#800080', false),\r\n      new ColorModel('#4B1182', false),\r\n      new ColorModel('#CBE399', true),\r\n      new ColorModel('#9ACC9A', false),\r\n      new ColorModel('#95C533', false),\r\n    ]"
            },
            {
                "name": "FilledColourButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    color: '#95C533',\r\n    isSelected: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const element = canvas.getByRole('checkmark');\r\n\r\n    await expect(element).toBeInTheDocument();\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkmark.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckmarkComponent>",
                "defaultValue": "{\r\n  title: 'Basic/Checkmark',\r\n  component: CheckmarkComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"width: 25%; height: 25%\">${story}</div>`)\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorButtonComponent>",
                "defaultValue": "{\r\n  title: 'Color/Button',\r\n  component: ColorButtonComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"width: 25%; height: 25%\">${story}</div>`)\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorsGridComponent>",
                "defaultValue": "{\r\n  title: 'Color/Grid',\r\n  component: ColorsGridComponent,\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ColorPickerDropdownComponent>",
                "defaultValue": "{\r\n  title: 'Color/Picker',\r\n  component: ColorPickerDropdownComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div>${story}</div>`)\r\n  ],\r\n}"
            },
            {
                "name": "multipleColorsGrid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    colors: colors,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dark',\r\n      values: [\r\n        { name: 'dark', value: '#363636' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "multipleColorsPicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/color-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    colors: colors,\r\n    label: 'Color',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dark',\r\n      values: [\r\n        { name: 'dark', value: '#363636' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckmarkComponent>",
                "file": "src/stories/checkmark.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorButtonComponent>",
                "file": "src/stories/color-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorsGridComponent>",
                "file": "src/stories/color-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ColorPickerDropdownComponent>",
                "file": "src/stories/color-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/checkmark.stories.ts": [
                {
                    "name": "Checkmark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkmark.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkmark.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckmarkComponent>",
                    "defaultValue": "{\r\n  title: 'Basic/Checkmark',\r\n  component: CheckmarkComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"width: 25%; height: 25%\">${story}</div>`)\r\n  ],\r\n}"
                }
            ],
            "src/stories/color-grid.stories.ts": [
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n      new ColorModel('#FFE4C4', true), \r\n      new ColorModel('#FA9ACD', false),\r\n      new ColorModel('#DB7093', false),\r\n      new ColorModel('#FF00FF', false),\r\n      new ColorModel('#C71585', false),\r\n      new ColorModel('#800080', false),\r\n      new ColorModel('#4B1182', false),\r\n      new ColorModel('#CBE399', false),\r\n      new ColorModel('#9ACC9A', false),\r\n      new ColorModel('#95C533', false),\r\n      new ColorModel('#05CC33', false),\r\n\r\n    ]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorsGridComponent>",
                    "defaultValue": "{\r\n  title: 'Color/Grid',\r\n  component: ColorsGridComponent,\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "multipleColorsGrid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    colors: colors,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dark',\r\n      values: [\r\n        { name: 'dark', value: '#363636' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/color-picker.stories.ts": [
                {
                    "name": "colors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n      new ColorModel('#FFE4C4', false), \r\n      new ColorModel('#FA9ACD', false),\r\n      new ColorModel('#DB7093', false),\r\n      new ColorModel('#FF00FF', false),\r\n      new ColorModel('#C71585', false),\r\n      new ColorModel('#800080', false),\r\n      new ColorModel('#4B1182', false),\r\n      new ColorModel('#CBE399', true),\r\n      new ColorModel('#9ACC9A', false),\r\n      new ColorModel('#95C533', false),\r\n    ]"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorPickerDropdownComponent>",
                    "defaultValue": "{\r\n  title: 'Color/Picker',\r\n  component: ColorPickerDropdownComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div>${story}</div>`)\r\n  ],\r\n}"
                },
                {
                    "name": "multipleColorsPicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    colors: colors,\r\n    label: 'Color',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dark',\r\n      values: [\r\n        { name: 'dark', value: '#363636' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/color-button.stories.ts": [
                {
                    "name": "FilledColourButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    color: '#95C533',\r\n    isSelected: true,\r\n  },\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n    const element = canvas.getByRole('checkmark');\r\n\r\n    await expect(element).toBeInTheDocument();\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/color-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ColorButtonComponent>",
                    "defaultValue": "{\r\n  title: 'Color/Button',\r\n  component: ColorButtonComponent,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    componentWrapperDecorator((story) => `<div style=\"width: 25%; height: 25%\">${story}</div>`)\r\n  ],\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/checkmark.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckmarkComponent>",
                    "file": "src/stories/checkmark.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/color-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorButtonComponent>",
                    "file": "src/stories/color-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/color-grid.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorsGridComponent>",
                    "file": "src/stories/color-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/color-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ColorPickerDropdownComponent>",
                    "file": "src/stories/color-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/checkmark/checkmark.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckmarkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/color/color-button/color-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorButtonComponent",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "src/color/color-picker/color-picker-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorPickerDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/color/colors-grid/colors-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/color/model/color.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ColorModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/color/model/color.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IColorModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkmark.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkmark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkmark.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilledColourButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multipleColorsGrid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "colors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/color-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multipleColorsPicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}